/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SettingsIndexRouteImport } from './routes/settings/index'
import { Route as PickIndexRouteImport } from './routes/pick/index'
import { Route as MindIndexRouteImport } from './routes/mind/index'
import { Route as HoldIndexRouteImport } from './routes/hold/index'
import { Route as FeelIndexRouteImport } from './routes/feel/index'
import { Route as DataIndexRouteImport } from './routes/data/index'
import { Route as ChatIndexRouteImport } from './routes/chat/index'
import { Route as HoldStockCodeRouteImport } from './routes/hold/$stockCode'
import { Route as DataTagsRouteImport } from './routes/data/tags'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const PickIndexRoute = PickIndexRouteImport.update({
  id: '/pick/',
  path: '/pick/',
  getParentRoute: () => rootRouteImport,
} as any)
const MindIndexRoute = MindIndexRouteImport.update({
  id: '/mind/',
  path: '/mind/',
  getParentRoute: () => rootRouteImport,
} as any)
const HoldIndexRoute = HoldIndexRouteImport.update({
  id: '/hold/',
  path: '/hold/',
  getParentRoute: () => rootRouteImport,
} as any)
const FeelIndexRoute = FeelIndexRouteImport.update({
  id: '/feel/',
  path: '/feel/',
  getParentRoute: () => rootRouteImport,
} as any)
const DataIndexRoute = DataIndexRouteImport.update({
  id: '/data/',
  path: '/data/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => rootRouteImport,
} as any)
const HoldStockCodeRoute = HoldStockCodeRouteImport.update({
  id: '/hold/$stockCode',
  path: '/hold/$stockCode',
  getParentRoute: () => rootRouteImport,
} as any)
const DataTagsRoute = DataTagsRouteImport.update({
  id: '/data/tags',
  path: '/data/tags',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/data/tags': typeof DataTagsRoute
  '/hold/$stockCode': typeof HoldStockCodeRoute
  '/chat': typeof ChatIndexRoute
  '/data': typeof DataIndexRoute
  '/feel': typeof FeelIndexRoute
  '/hold': typeof HoldIndexRoute
  '/mind': typeof MindIndexRoute
  '/pick': typeof PickIndexRoute
  '/settings': typeof SettingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/data/tags': typeof DataTagsRoute
  '/hold/$stockCode': typeof HoldStockCodeRoute
  '/chat': typeof ChatIndexRoute
  '/data': typeof DataIndexRoute
  '/feel': typeof FeelIndexRoute
  '/hold': typeof HoldIndexRoute
  '/mind': typeof MindIndexRoute
  '/pick': typeof PickIndexRoute
  '/settings': typeof SettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/data/tags': typeof DataTagsRoute
  '/hold/$stockCode': typeof HoldStockCodeRoute
  '/chat/': typeof ChatIndexRoute
  '/data/': typeof DataIndexRoute
  '/feel/': typeof FeelIndexRoute
  '/hold/': typeof HoldIndexRoute
  '/mind/': typeof MindIndexRoute
  '/pick/': typeof PickIndexRoute
  '/settings/': typeof SettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/data/tags'
    | '/hold/$stockCode'
    | '/chat'
    | '/data'
    | '/feel'
    | '/hold'
    | '/mind'
    | '/pick'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/data/tags'
    | '/hold/$stockCode'
    | '/chat'
    | '/data'
    | '/feel'
    | '/hold'
    | '/mind'
    | '/pick'
    | '/settings'
  id:
    | '__root__'
    | '/'
    | '/data/tags'
    | '/hold/$stockCode'
    | '/chat/'
    | '/data/'
    | '/feel/'
    | '/hold/'
    | '/mind/'
    | '/pick/'
    | '/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DataTagsRoute: typeof DataTagsRoute
  HoldStockCodeRoute: typeof HoldStockCodeRoute
  ChatIndexRoute: typeof ChatIndexRoute
  DataIndexRoute: typeof DataIndexRoute
  FeelIndexRoute: typeof FeelIndexRoute
  HoldIndexRoute: typeof HoldIndexRoute
  MindIndexRoute: typeof MindIndexRoute
  PickIndexRoute: typeof PickIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pick/': {
      id: '/pick/'
      path: '/pick'
      fullPath: '/pick'
      preLoaderRoute: typeof PickIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mind/': {
      id: '/mind/'
      path: '/mind'
      fullPath: '/mind'
      preLoaderRoute: typeof MindIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hold/': {
      id: '/hold/'
      path: '/hold'
      fullPath: '/hold'
      preLoaderRoute: typeof HoldIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/feel/': {
      id: '/feel/'
      path: '/feel'
      fullPath: '/feel'
      preLoaderRoute: typeof FeelIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/data/': {
      id: '/data/'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof DataIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/': {
      id: '/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hold/$stockCode': {
      id: '/hold/$stockCode'
      path: '/hold/$stockCode'
      fullPath: '/hold/$stockCode'
      preLoaderRoute: typeof HoldStockCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/data/tags': {
      id: '/data/tags'
      path: '/data/tags'
      fullPath: '/data/tags'
      preLoaderRoute: typeof DataTagsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DataTagsRoute: DataTagsRoute,
  HoldStockCodeRoute: HoldStockCodeRoute,
  ChatIndexRoute: ChatIndexRoute,
  DataIndexRoute: DataIndexRoute,
  FeelIndexRoute: FeelIndexRoute,
  HoldIndexRoute: HoldIndexRoute,
  MindIndexRoute: MindIndexRoute,
  PickIndexRoute: PickIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
